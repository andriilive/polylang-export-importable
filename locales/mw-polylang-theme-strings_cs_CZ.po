msgid ""
msgstr ""
"X-Domain: mw-polylang-theme-strings\n"

msgid ""
"Theme', self::$prefix) . ': ' . wp_get_theme()->Name . '&paged=1'); ?>';\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_plugins'] = '<?php echo admin_url('options-general.php?page=mlang&tab=strings&s&group=' . __('Plugins', self::$prefix) . '&paged=1'); ?>';\n"
"                                <?php\n"
"                            }\n"
"                            else{ // for Polylang >= 2.1\n"
"                                ?>\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_strings'] = '<?php echo admin_url('admin.php?page=mlang_strings'); ?>';\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_strings_theme_current'] = '<?php echo admin_url('admin.php?page=mlang_strings&s&group=' . __('Theme', self::$prefix) . ': ' . wp_get_theme()->Name . '&paged=1'); ?>';\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_plugins'] = '<?php echo admin_url('admin.php?page=mlang_strings&s&group=' . __('Plugins', self::$prefix) . '&paged=1'); ?>';\n"
"                                <?php\n"
"                            }\n"
"\n"
"                        ?>\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[10] = '<?php _e('Polylang Theme Strings', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[11] = '<?php _e('works', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[12] = '<?php echo self::$plugin_version; ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[20] = '<?php _e('Current theme polylang-strings detected', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[21] = '<?php echo $this->var['theme-strings-count'][$this->Path_Get('theme_dir_name')]; ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[30] = '<?php _e('All themes polylang-strings detected', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[31] = '<?php echo array_sum($this->var['theme-strings-count']); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[35] = '<?php _e('All plugins polylang-strings detected', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[36] = '<?php echo $this->var['plugins-strings-count']; ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[40] = '<?php _e('Plugin web-page', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[50] = '<?php _e('Donation', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[60] = '<?php _e('Please, give plugin feedback', self::$prefix); ?>';\n"
"\n"
"                        jQuery(document).ready(function(){\n"
"                            window.<?php echo self::$prefix; ?>admin.init.polylang_info_area();\n"
"                        });\n"
"                    }\n"
"                </script>\n"
"                <?php\n"
"            }\n"
"\n"
"            if ($this->Is_WP_Plugins_Page()){\n"
"                ?>\n"
"                <script type=\"text/javascript\">\n"
"                    if (typeof(window.<?php echo self::$prefix; ?>admin) == 'object'){\n"
"                        window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_strings'] = '<?php\n"
"\n"
"                            if (\n"
"                                defined('POLYLANG_VERSION')\n"
"                                && (float)POLYLANG_VERSION < 2.1\n"
"                            ){\n"
"                                echo admin_url('options-general.php?page=mlang&tab=strings');\n"
"                            }\n"
"                            else{ // for Polylang >= 2.1\n"
"                                echo admin_url('admin.php?page=mlang_strings');\n"
"                            }\n"
"\n"
"                        ?>';\n"
"\n"
"                        window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_theme_strings_settings'] = '<?php echo admin_url('admin.php?page=' . self::$prefix . 'settings'); ?>';\n"
"\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[70] = '<?php _e('Go to strings translate page', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[71] = '<?php _e('Go to settings page', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[80] = '<?php _e('Required to install and activate the plugin', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[81] = '<?php _e('Polylang', self::$prefix); ?>';\n"
"\n"
"                        jQuery(document).ready(function(){\n"
"                            window.<?php echo self::$prefix; ?>admin.init.plugins_page();\n"
"                        });\n"
"                    }\n"
"                </script>\n"
"                <?php\n"
"            }\n"
"        }\n"
"\n"
"        public function Admin_Menus_Init(){\n"
"            if (is_admin()){\n"
"                add_submenu_page(\n"
"                    'mlang',\n"
"                    __('Settings', self::$prefix) . ' :: ' . __('Polylang Theme Strings', self::$prefix),\n"
"                    __('Polylang Theme Strings', self::$prefix),\n"
"                    'manage_options',\n"
"                    self::$prefix . 'settings',\n"
"                    array($this, 'Admin_Page_Settings')\n"
"                );\n"
"            }\n"
"        }\n"
"\n"
"        public function Admin_Page_Settings(){\n"
"            $tpl = $this->Path_Get('plugin_templates_path') . 'admin-page-settings.php';\n"
"            if (file_exists($tpl)) include_once($tpl);\n"
"        }\n"
"\n"
"        public function Str_Filter($t_text, $ut_text, $domain){\n"
"            if ($domain != self::$pll_d){\n"
"                return __($ut_text, self::$pll_d);\n"
"            }\n"
"            else{\n"
"                return $t_text;\n"
"            }\n"
"        }\n"
"\n"
"        public function Setting_Get($key, $as = null){\n"
"            if (!isset($this->settings[$key])){\n"
"                $this->settings[$key] = get_option(self::$prefix . 'settings_' . $key);\n"
"\n"
"                switch (strtolower($as)){\n"
"                    case 'bool':\n"
"                        $this->settings[$key] = ((int)$this->settings[$key] > 0 ? true : false);\n"
"                    break;\n"
"                }\n"
"            }\n"
"\n"
"            return $this->settings[$key];\n"
"        }\n"
"\n"
"        public function Path_Get($key){\n"
"            if (isset($this->paths[$key])){\n"
"                return $this->paths[$key];\n"
"            }\n"
"        }\n"
"\n"
"        public function Files_Recursive_Get($dir){\n"
"            $files = array();\n"
"\n"
"            if ($h = opendir($dir)){\n"
"                while (($item = readdir($h)) !== false){\n"
"                    $f = $dir . '/' . $item;\n"
"\n"
"                    if (\n"
"                        is_file($f)\n"
"                        && filesize($f) <= self::$php_file_size_limit\n"
"                    ){\n"
"                        $files[] = $f;\n"
"                    }\n"
"                    else if (\n"
"                        is_dir($f)\n"
"                        && !preg_match(\"/^[\\.]{1,2}$/uis\", $item)\n"
"                    ){\n"
"                        $files = array_merge($files, $this->Files_Recursive_Get($f));\n"
"                    }\n"
"                }\n"
"\n"
"                closedir($h);\n"
"            }\n"
"\n"
"            return $files;\n"
"        }\n"
"\n"
"        public function Files_PLL_Strings_Parse($dir){\n"
"            $strings = array();\n"
"            $files = $this->Files_Recursive_Get($dir);\n"
"\n"
"            if (is_array($files) && count($files)){\n"
"                foreach($files as $v){\n"
"                    if (preg_match(\"/\\/.*?\\.(php[0-9]?|inc)$/uis\", $v)){\n"
"                        preg_match_all(\"/(?:\\<\\?.*?\\?\\>)|(?:\\<\\?.*?[^\\?]+[^\\>]+)/uis\", file_get_contents($v), $p);\n"
"\n"
"                        if (count($p[0])){\n"
"                            foreach ($p[0] as $pv){\n"
"                                if ($this->Setting_Get('search_native_wp_functions"
msgstr ""
"Theme', self::$prefix) . ': ' . wp_get_theme()->Name . '&paged=1'); ?>';\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_plugins'] = '<?php echo admin_url('options-general.php?page=mlang&tab=strings&s&group=' . __('Plugins', self::$prefix) . '&paged=1'); ?>';\n"
"                                <?php\n"
"                            }\n"
"                            else{ // for Polylang >= 2.1\n"
"                                ?>\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_strings'] = '<?php echo admin_url('admin.php?page=mlang_strings'); ?>';\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_strings_theme_current'] = '<?php echo admin_url('admin.php?page=mlang_strings&s&group=' . __('Theme', self::$prefix) . ': ' . wp_get_theme()->Name . '&paged=1'); ?>';\n"
"                                window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_plugins'] = '<?php echo admin_url('admin.php?page=mlang_strings&s&group=' . __('Plugins', self::$prefix) . '&paged=1'); ?>';\n"
"                                <?php\n"
"                            }\n"
"\n"
"                        ?>\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[10] = '<?php _e('Polylang Theme Strings', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[11] = '<?php _e('works', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[12] = '<?php echo self::$plugin_version; ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[20] = '<?php _e('Current theme polylang-strings detected', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[21] = '<?php echo $this->var['theme-strings-count'][$this->Path_Get('theme_dir_name')]; ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[30] = '<?php _e('All themes polylang-strings detected', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[31] = '<?php echo array_sum($this->var['theme-strings-count']); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[35] = '<?php _e('All plugins polylang-strings detected', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[36] = '<?php echo $this->var['plugins-strings-count']; ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[40] = '<?php _e('Plugin web-page', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[50] = '<?php _e('Donation', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[60] = '<?php _e('Please, give plugin feedback', self::$prefix); ?>';\n"
"\n"
"                        jQuery(document).ready(function(){\n"
"                            window.<?php echo self::$prefix; ?>admin.init.polylang_info_area();\n"
"                        });\n"
"                    }\n"
"                </script>\n"
"                <?php\n"
"            }\n"
"\n"
"            if ($this->Is_WP_Plugins_Page()){\n"
"                ?>\n"
"                <script type=\"text/javascript\">\n"
"                    if (typeof(window.<?php echo self::$prefix; ?>admin) == 'object'){\n"
"                        window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_strings'] = '<?php\n"
"\n"
"                            if (\n"
"                                defined('POLYLANG_VERSION')\n"
"                                && (float)POLYLANG_VERSION < 2.1\n"
"                            ){\n"
"                                echo admin_url('options-general.php?page=mlang&tab=strings');\n"
"                            }\n"
"                            else{ // for Polylang >= 2.1\n"
"                                echo admin_url('admin.php?page=mlang_strings');\n"
"                            }\n"
"\n"
"                        ?>';\n"
"\n"
"                        window.<?php echo self::$prefix; ?>admin.attr.urls['polylang_theme_strings_settings'] = '<?php echo admin_url('admin.php?page=' . self::$prefix . 'settings'); ?>';\n"
"\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[70] = '<?php _e('Go to strings translate page', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[71] = '<?php _e('Go to settings page', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[80] = '<?php _e('Required to install and activate the plugin', self::$prefix); ?>';\n"
"                        window.<?php echo self::$prefix; ?>admin.lng[81] = '<?php _e('Polylang', self::$prefix); ?>';\n"
"\n"
"                        jQuery(document).ready(function(){\n"
"                            window.<?php echo self::$prefix; ?>admin.init.plugins_page();\n"
"                        });\n"
"                    }\n"
"                </script>\n"
"                <?php\n"
"            }\n"
"        }\n"
"\n"
"        public function Admin_Menus_Init(){\n"
"            if (is_admin()){\n"
"                add_submenu_page(\n"
"                    'mlang',\n"
"                    __('Settings', self::$prefix) . ' :: ' . __('Polylang Theme Strings', self::$prefix),\n"
"                    __('Polylang Theme Strings', self::$prefix),\n"
"                    'manage_options',\n"
"                    self::$prefix . 'settings',\n"
"                    array($this, 'Admin_Page_Settings')\n"
"                );\n"
"            }\n"
"        }\n"
"\n"
"        public function Admin_Page_Settings(){\n"
"            $tpl = $this->Path_Get('plugin_templates_path') . 'admin-page-settings.php';\n"
"            if (file_exists($tpl)) include_once($tpl);\n"
"        }\n"
"\n"
"        public function Str_Filter($t_text, $ut_text, $domain){\n"
"            if ($domain != self::$pll_d){\n"
"                return __($ut_text, self::$pll_d);\n"
"            }\n"
"            else{\n"
"                return $t_text;\n"
"            }\n"
"        }\n"
"\n"
"        public function Setting_Get($key, $as = null){\n"
"            if (!isset($this->settings[$key])){\n"
"                $this->settings[$key] = get_option(self::$prefix . 'settings_' . $key);\n"
"\n"
"                switch (strtolower($as)){\n"
"                    case 'bool':\n"
"                        $this->settings[$key] = ((int)$this->settings[$key] > 0 ? true : false);\n"
"                    break;\n"
"                }\n"
"            }\n"
"\n"
"            return $this->settings[$key];\n"
"        }\n"
"\n"
"        public function Path_Get($key){\n"
"            if (isset($this->paths[$key])){\n"
"                return $this->paths[$key];\n"
"            }\n"
"        }\n"
"\n"
"        public function Files_Recursive_Get($dir){\n"
"            $files = array();\n"
"\n"
"            if ($h = opendir($dir)){\n"
"                while (($item = readdir($h)) !== false){\n"
"                    $f = $dir . '/' . $item;\n"
"\n"
"                    if (\n"
"                        is_file($f)\n"
"                        && filesize($f) <= self::$php_file_size_limit\n"
"                    ){\n"
"                        $files[] = $f;\n"
"                    }\n"
"                    else if (\n"
"                        is_dir($f)\n"
"                        && !preg_match(\"/^[\\.]{1,2}$/uis\", $item)\n"
"                    ){\n"
"                        $files = array_merge($files, $this->Files_Recursive_Get($f));\n"
"                    }\n"
"                }\n"
"\n"
"                closedir($h);\n"
"            }\n"
"\n"
"            return $files;\n"
"        }\n"
"\n"
"        public function Files_PLL_Strings_Parse($dir){\n"
"            $strings = array();\n"
"            $files = $this->Files_Recursive_Get($dir);\n"
"\n"
"            if (is_array($files) && count($files)){\n"
"                foreach($files as $v){\n"
"                    if (preg_match(\"/\\/.*?\\.(php[0-9]?|inc)$/uis\", $v)){\n"
"                        preg_match_all(\"/(?:\\<\\?.*?\\?\\>)|(?:\\<\\?.*?[^\\?]+[^\\>]+)/uis\", file_get_contents($v), $p);\n"
"\n"
"                        if (count($p[0])){\n"
"                            foreach ($p[0] as $pv){\n"
"                                if ($this->Setting_Get('search_native_wp_functions"

msgid ""
"Base plugin %1$s is not defined', self::$prefix), '&quot;Polylang&quot;'); ?></b>.<br />\n"
"                    <?php printf(__('You need install and activate base plugin %1$s for works plugin %2$s', self::$prefix), '<a href=\"https://wordpress.org/plugins/polylang\" target=\"_blank\">Polylang</a>"
msgstr ""
"Base plugin %1$s is not defined', self::$prefix), '&quot;Polylang&quot;'); ?></b>.<br />\n"
"                    <?php printf(__('You need install and activate base plugin %1$s for works plugin %2$s', self::$prefix), '<a href=\"https://wordpress.org/plugins/polylang\" target=\"_blank\">Polylang</a>"

msgid ""
"Theme', self::$prefix) . ': ' . $data['name']);\n"
"                }\n"
"            }\n"
"        }\n"
"\n"
"        public function Themes_PLL_Strings_Init(){\n"
"            $themes = wp_get_themes();\n"
"\n"
"            if (count($themes)){\n"
"                foreach ($themes as $theme_dir_name => $theme){\n"
"                    $data = get_option(self::$prefix . 'theme_' . $theme_dir_name . '_data');\n"
"                    $tsc = &$this->var['theme-strings-count'][$theme_dir_name];\n"
"                    $tsc = 0;\n"
"\n"
"                    if (\n"
"                        is_array($data)\n"
"                        && is_array($data['strings'])\n"
"                        && count($data['strings'])\n"
"                    ){\n"
"                        foreach ($data['strings'] as $v){\n"
"                            pll_register_string($v, $v, __('Theme', self::$prefix) . ': ' . $data['name']);\n"
"                        }\n"
"\n"
"                        $tsc = count($data['strings']);\n"
"                    }\n"
"                }\n"
"            }\n"
"        }\n"
"\n"
"        public function Plugins_PLL_Strings_Init(){\n"
"            if ($this->Setting_Get('search_plugins_strings"
msgstr ""
"Theme', self::$prefix) . ': ' . $data['name']);\n"
"                }\n"
"            }\n"
"        }\n"
"\n"
"        public function Themes_PLL_Strings_Init(){\n"
"            $themes = wp_get_themes();\n"
"\n"
"            if (count($themes)){\n"
"                foreach ($themes as $theme_dir_name => $theme){\n"
"                    $data = get_option(self::$prefix . 'theme_' . $theme_dir_name . '_data');\n"
"                    $tsc = &$this->var['theme-strings-count'][$theme_dir_name];\n"
"                    $tsc = 0;\n"
"\n"
"                    if (\n"
"                        is_array($data)\n"
"                        && is_array($data['strings'])\n"
"                        && count($data['strings'])\n"
"                    ){\n"
"                        foreach ($data['strings'] as $v){\n"
"                            pll_register_string($v, $v, __('Theme', self::$prefix) . ': ' . $data['name']);\n"
"                        }\n"
"\n"
"                        $tsc = count($data['strings']);\n"
"                    }\n"
"                }\n"
"            }\n"
"        }\n"
"\n"
"        public function Plugins_PLL_Strings_Init(){\n"
"            if ($this->Setting_Get('search_plugins_strings"
